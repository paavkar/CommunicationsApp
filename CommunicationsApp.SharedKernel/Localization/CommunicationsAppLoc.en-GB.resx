<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddServer" xml:space="preserve">
    <value>Add server</value>
  </data>
  <data name="AlreadyHaveAccount" xml:space="preserve">
    <value>Already have an account? Log in here</value>
  </data>
  <data name="AlreadyInvitation" xml:space="preserve">
    <value>Do you already have an invitation?</value>
  </data>
  <data name="AlreadyMember" xml:space="preserve">
    <value>You are already a member of this server.</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="CopyLink" xml:space="preserve">
    <value>Copy link</value>
  </data>
  <data name="CreateNewAccount" xml:space="preserve">
    <value>Create a new account.</value>
  </data>
  <data name="CreateNewServer" xml:space="preserve">
    <value>Create new server</value>
  </data>
  <data name="CreateOwn" xml:space="preserve">
    <value>Create own</value>
  </data>
  <data name="CreateOwnServer" xml:space="preserve">
    <value>Create own server</value>
  </data>
  <data name="DisplayMemberList" xml:space="preserve">
    <value>Display member list</value>
  </data>
  <data name="DisplayName" xml:space="preserve">
    <value>Display name</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailOrUsername" xml:space="preserve">
    <value>Email or username</value>
  </data>
  <data name="EmptyInvitation" xml:space="preserve">
    <value>Invitation code cannot be empty.</value>
  </data>
  <data name="ForgotPassword" xml:space="preserve">
    <value>Forgot your password?</value>
  </data>
  <data name="GoBack" xml:space="preserve">
    <value>Go back</value>
  </data>
  <data name="HideMemberList" xml:space="preserve">
    <value>Hide member list</value>
  </data>
  <data name="InvitationCodeOrLink" xml:space="preserve">
    <value>Server invitation link or code</value>
  </data>
  <data name="InvitationsVisual" xml:space="preserve">
    <value>Invitations should look like the following ones:</value>
  </data>
  <data name="InvitePeople" xml:space="preserve">
    <value>Invite people</value>
  </data>
  <data name="InvitePeopleTo" xml:space="preserve">
    <value>Invite people to the server</value>
  </data>
  <data name="JoinExistingServerPaste" xml:space="preserve">
    <value>Join an existing server by pasting the invitation below</value>
  </data>
  <data name="JoinServer" xml:space="preserve">
    <value>Join server</value>
  </data>
  <data name="Leave" xml:space="preserve">
    <value>Leave</value>
  </data>
  <data name="LeaveServer" xml:space="preserve">
    <value>Leave server</value>
  </data>
  <data name="LeaveServerConfirmation" xml:space="preserve">
    <value>Are you sure you want to leave the server</value>
  </data>
  <data name="LinkCopied" xml:space="preserve">
    <value>Link copied!</value>
  </data>
  <data name="LocalAccount" xml:space="preserve">
    <value>Use a local account to log in.</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="MemberSince" xml:space="preserve">
    <value>Member since</value>
  </data>
  <data name="OpenSettings" xml:space="preserve">
    <value>Open settings</value>
  </data>
  <data name="OptionalServerDescription" xml:space="preserve">
    <value>(Optional) Server description</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegisterAsNew" xml:space="preserve">
    <value>Register as a new user</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="ResendEmailConfirmation" xml:space="preserve">
    <value>Resend email confirmation</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SendInvitation" xml:space="preserve">
    <value>Send the server's invitation link to someone</value>
  </data>
  <data name="SendMessage" xml:space="preserve">
    <value>Send a message to:</value>
  </data>
  <data name="ServerDescription" xml:space="preserve">
    <value>Server description</value>
  </data>
  <data name="ServerInvitation" xml:space="preserve">
    <value>Server invitation</value>
  </data>
  <data name="ServerName" xml:space="preserve">
    <value>Server name</value>
  </data>
  <data name="ServerOwner" xml:space="preserve">
    <value>Server owner</value>
  </data>
  <data name="UseAnotherServiceRegister" xml:space="preserve">
    <value>Use another service to register.</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="WelcomeToChannel" xml:space="preserve">
    <value>Welcome to channel</value>
  </data>
  <data name="ServerProfileDisplayName" xml:space="preserve">
    <value>Display name for the server profile</value>
  </data>
  <data name="ServerProfileStatus" xml:space="preserve">
    <value>Text status for the server profile</value>
  </data>
  <data name="SetServerProfileDisplayNameStatus" xml:space="preserve">
    <value>Set display name and text status for the server profile</value>
  </data>
  <data name="SetServerProfile" xml:space="preserve">
    <value>Set the server profile for server</value>
  </data>
  <data name="AddChannelClass" xml:space="preserve">
    <value>Add a new channel class</value>
  </data>
  <data name="ChannelClassName" xml:space="preserve">
    <value>Name for the channel class</value>
  </data>
  <data name="Channel" xml:space="preserve">
    <value>Channel</value>
  </data>
  <data name="ChannelName" xml:space="preserve">
    <value>Name for the channel</value>
  </data>
  <data name="PrivateClass" xml:space="preserve">
    <value>Private channel class</value>
  </data>
  <data name="PrivateChannel" xml:space="preserve">
    <value>Private channel</value>
  </data>
  <data name="NewChannelClass" xml:space="preserve">
    <value>New channel class</value>
  </data>
  <data name="NewChannel" xml:space="preserve">
    <value>New channel</value>
  </data>
  <data name="OptionalChannelDescription" xml:space="preserve">
    <value>(Optional) Channel description</value>
  </data>
  <data name="AddChannel" xml:space="preserve">
    <value>Add a new channel</value>
  </data>
  <data name="AddAlsoChannel" xml:space="preserve">
    <value>Add also a channel?</value>
  </data>
  <data name="SelectChannelClass" xml:space="preserve">
    <value>Select new channel's class</value>
  </data>
  <data name="MakeSelection" xml:space="preserve">
    <value>Make a selection...</value>
  </data>
  <data name="ChannelClassNameRequired" xml:space="preserve">
    <value>Name for the channel class cannot be empty.</value>
  </data>
  <data name="ChannelClassNameUnique" xml:space="preserve">
    <value>Name for the channel class must be unique within the server.</value>
  </data>
  <data name="ChannelNameUnique" xml:space="preserve">
    <value>Name for the channel must be unique within the server.</value>
  </data>
  <data name="ChannelNameRequired" xml:space="preserve">
    <value>Name for the channel cannot be empty.</value>
  </data>
  <data name="ChannelClassNotSelected" xml:space="preserve">
    <value>You must choose a channel class for the channel.</value>
  </data>
  <data name="ServerNameRequired" xml:space="preserve">
    <value>Name for the server cannot be empty.</value>
  </data>
  <data name="AddServerPermissionsFirst" xml:space="preserve">
    <value>Administrator account must add available server permissions first.</value>
  </data>
  <data name="AddServerPermissions" xml:space="preserve">
    <value>Add available server permissions.</value>
  </data>
  <data name="NoViewChannelsPermission" xml:space="preserve">
    <value>You do not have permission to view channels.</value>
  </data>
  <data name="TextChannels" xml:space="preserve">
    <value>text channels</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="GeneralDescription" xml:space="preserve">
    <value>General discussion channel</value>
  </data>
  <data name="ManageServer" xml:space="preserve">
    <value>Manage server</value>
  </data>
  <data name="Members" xml:space="preserve">
    <value>Members</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="ServerMembers" xml:space="preserve">
    <value>Server's members</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DescriptionPlaceholder" xml:space="preserve">
    <value>Tell something about this server (meaning, who is the target user).</value>
  </data>
  <data name="ServerInfoUpdateError" xml:space="preserve">
    <value>There was an error updating the server info and/or description.</value>
  </data>
  <data name="Revert" xml:space="preserve">
    <value>Revert</value>
  </data>
  <data name="RolesDescription" xml:space="preserve">
    <value>Use roles to group server members and set up permissions.</value>
  </data>
  <data name="DefaultPermissions" xml:space="preserve">
    <value>Default permissions</value>
  </data>
  <data name="EveryoneRoleDescription" xml:space="preserve">
    <value>Applies to all server members</value>
  </data>
  <data name="EditRole" xml:space="preserve">
    <value>Edit role</value>
  </data>
  <data name="DisplayChannels" xml:space="preserve">
    <value>Display channels</value>
  </data>
  <data name="ManageChannels" xml:space="preserve">
    <value>Manage channels</value>
  </data>
  <data name="ManageRoles" xml:space="preserve">
    <value>Manage roles</value>
  </data>
  <data name="ViewLogs" xml:space="preserve">
    <value>View logs</value>
  </data>
  <data name="CreateInvite" xml:space="preserve">
    <value>Create invitations</value>
  </data>
  <data name="ChangeNickname" xml:space="preserve">
    <value>Change display name</value>
  </data>
  <data name="ManageNicknames" xml:space="preserve">
    <value>Manage display names</value>
  </data>
  <data name="KickApproveMembers" xml:space="preserve">
    <value>Kick members, and approve and reject member applications</value>
  </data>
  <data name="BanMembers" xml:space="preserve">
    <value>Ban members</value>
  </data>
  <data name="TimeoutMembers" xml:space="preserve">
    <value>Timeout members</value>
  </data>
  <data name="SendMessages" xml:space="preserve">
    <value>Send messages</value>
  </data>
  <data name="SendMessagesToThreads" xml:space="preserve">
    <value>Send messages to threads</value>
  </data>
  <data name="CreatePublicThreads" xml:space="preserve">
    <value>Create public threads</value>
  </data>
  <data name="CreatePrivateThreads" xml:space="preserve">
    <value>Create private threads</value>
  </data>
  <data name="EmbedLinks" xml:space="preserve">
    <value>Embed links</value>
  </data>
  <data name="AttachFiles" xml:space="preserve">
    <value>Attach files</value>
  </data>
  <data name="AddReactions" xml:space="preserve">
    <value>Add reactions</value>
  </data>
  <data name="ManageMessages" xml:space="preserve">
    <value>Manage messages</value>
  </data>
  <data name="ManageThreads" xml:space="preserve">
    <value>Manage threads</value>
  </data>
  <data name="ReadMessageHistory" xml:space="preserve">
    <value>Read message history</value>
  </data>
  <data name="AdminPrivileges" xml:space="preserve">
    <value>Admin privileges</value>
  </data>
  <data name="UnsavedChanges" xml:space="preserve">
    <value>You have unsaved changes.</value>
  </data>
  <data name="Return" xml:space="preserve">
    <value>Return</value>
  </data>
  <data name="RoleUpdateFailed" xml:space="preserve">
    <value>Failed to update role.</value>
  </data>
  <data name="SendingMessageError" xml:space="preserve">
    <value>There was an error sending the message. Try again later.</value>
  </data>
  <data name="SavingMessageError" xml:space="preserve">
    <value>There was an error saving the message. Try again later.</value>
  </data>
  <data name="NewRole" xml:space="preserve">
    <value>New role</value>
  </data>
  <data name="SearchRoles" xml:space="preserve">
    <value>Search roles</value>
  </data>
  <data name="AddRoleError" xml:space="preserve">
    <value>There was an error creating the role.</value>
  </data>
  <data name="Display" xml:space="preserve">
    <value>Display</value>
  </data>
  <data name="Permissions" xml:space="preserve">
    <value>Permissions</value>
  </data>
  <data name="MemberManagement" xml:space="preserve">
    <value>Manage members</value>
  </data>
  <data name="RoleName" xml:space="preserve">
    <value>Name of the role</value>
  </data>
  <data name="RoleColour" xml:space="preserve">
    <value>Colour for the role</value>
  </data>
  <data name="RoleColourDescription" xml:space="preserve">
    <value>Members will use the role colour, that is the highest in hierarchy.</value>
  </data>
  <data name="DisplaySeparately" xml:space="preserve">
    <value>Display members with the role separately from other members</value>
  </data>
  <data name="SearchMembers" xml:space="preserve">
    <value>Search members</value>
  </data>
  <data name="AddMembers" xml:space="preserve">
    <value>Add members</value>
  </data>
  <data name="ChooseAtMost" xml:space="preserve">
    <value>Choose at most {0}</value>
  </data>
  <data name="NewRoleMembersMessage" xml:space="preserve">
    <value>{0} new members will be linked with the role.</value>
  </data>
  <data name="JoinedCA" xml:space="preserve">
    <value>Joined CA</value>
  </data>
  <data name="KickMember" xml:space="preserve">
    <value>Kick {0}</value>
  </data>
  <data name="BanMember" xml:space="preserve">
    <value>Ban {0}</value>
  </data>
  <data name="MoreSettings" xml:space="preserve">
    <value>More settings</value>
  </data>
</root>