@page "/channels/{ServerId}/{ChannelId}"
@rendermode InteractiveServer

@inject IServerService ServerService
@inject IJSRuntime JS

@if (Server != null)
{
    <PageTitle>CA | #@Channel?.Name | @Server.Name</PageTitle>
    <div style="display: flex;
                flex-grow: 1;
                position: sticky;
                top: 4em;
                background: green;
                height: 3em;
                width: 100%;
                align-items: center;
                ">
        <span style="margin-left: 1em;">
            #@Channel!.Name @Channel!.Description
        </span>
    </div>
    
    if (!Channel!.Messages.Any())
    {
        <div style="margin-top: 1em;">
        <span style="margin-left: 1em;">No messages in the channel @Channel.Name</span>
        <hr />

        </div>
    }
    foreach (var message in Channel!.Messages)
    {
        <div class="message">
            <strong>@message.Sender.DisplayName:</strong> @message.Content
        </div>
        <br />
    }
}

@code {
    [Parameter]
    public string? ServerId { get; set; }
    [Parameter]
    public string? ChannelId { get; set; }
    public Server? Server { get; set; }
    public Channel? Channel { get; set; }
    public ChatMessage NewMessage { get; set; } = new();
    public string? UserId { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (!string.IsNullOrEmpty(ChannelId) && !string.IsNullOrEmpty(ServerId))
            {
                UserId = await JS.InvokeAsync<string>("localStorageHelper.getItem", "userId");
                Server = await ServerService.GetServerByIdAsync(ServerId, UserId);
                if (Server == null)
                {
                    return;
                }
                Channel = Server?.ChannelClasses.SelectMany(cc => cc.Channels).FirstOrDefault(c => c.Id == ChannelId);
                if (Channel == null)
                {
                    return;
                }
                NewMessage.Channel = Channel;
                NewMessage.Sender = Server!.Members.FirstOrDefault(m => m.UserId == UserId)!;
                NewMessage.PartitionKey = $"ChatMessage-{Server.Id}";
                StateHasChanged();
            }
        }
    }
}
