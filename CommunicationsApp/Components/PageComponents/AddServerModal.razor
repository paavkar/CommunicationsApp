@implements IDialogContentComponent
@inject IStringLocalizer<CommunicationsAppLoc> Localizer
@inject AuthenticationStateProvider ASP
@inject IDialogService DialogService

@* Header *@
<FluentDialogHeader>
    <FluentStack VerticalAlignment="VerticalAlignment.Center">
        <FluentLabel Typo="Typography.PaneHeader">
            @Localizer["CreateOwnServer"]
        </FluentLabel>
    </FluentStack>
</FluentDialogHeader>

@* Footer *@
<FluentDialogFooter>
    <FluentStack Orientation="Orientation.Vertical">
        <FluentLabel>
            @Localizer["AlreadyInvitation"]
        </FluentLabel>
        <FluentButton OnClick="@OpenJoinServerModal">
            @Localizer["JoinServer"]
        </FluentButton>
    </FluentStack>
</FluentDialogFooter>

@* Body *@
<FluentDialogBody>
    <FluentStack Orientation="Orientation.Vertical" Style="overflow-y: auto">
        <FluentButton OnClick="@OpenNewServerModal" Style="width: 10em;">
            <FluentIcon Value="@(new Size20.Add())" />
            @Localizer["CreateOwn"]
        </FluentButton>
    </FluentStack>
</FluentDialogBody>

@code {
    [CascadingParameter]
    public FluentDialog Dialog { get; set; } = default!;
    private string UserId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await ASP.GetAuthenticationStateAsync();
        UserId = authState.User.Claims.Where(c => c.Type.Contains("nameidentifier")).First().Value;
    }

    private async void OpenNewServerModal()
    {
        var id = Guid.CreateVersion7();
        var code = Convert.ToBase64String(id.ToByteArray())
            .Replace("=", "")
            .Replace("/", "")
            .Replace("+", "");
        var newServer = new Server
        {
            Id = id.ToString(),
            Name = "",
            OwnerId = UserId,
            InvitationCode = code,
            ServerType = ServerType.Public
        };
        var dialog = await DialogService.ShowDialogAsync<NewServerModal>(newServer, new DialogParameters()
        {
            Title = Localizer["CreateNewServer"],
            Height = "25em",
        });
        await Dialog.CloseAsync();
    }

    private async void OpenJoinServerModal()
    {
        var dialog = await DialogService.ShowDialogAsync<JoinServerModal>(new DialogParameters
        {
            Title = Localizer["JoinServer"],
            Height = "32em",
            Width = "30em"
        });
        await Dialog.CloseAsync();
    }
}
